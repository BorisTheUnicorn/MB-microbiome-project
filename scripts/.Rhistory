library(tidyverse)
# Get the Data sets
friends <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends.csv')
friends_emotions <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_emotions.csv')
friends_info <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-08/friends_info.csv')
#Q1
friends_info %>% filter(us_views_millions == max (us_views_millions)) %>%
select(c(season,episode,title,us_views_millions,air_date))
#Q2
friends_join <- full_join(friends,friends_emotions, by = c("season","episode","scene")) %>%
full_join(.,friends_info, by = c("season","episode"))
View(friends_join)
#Q2
friends_join <- full_join(friends,friends_emotions, by = c("season","episode","scene", "utterance")) %>%
full_join(.,friends_info, by = c("season","episode"))
View(friends_join)
#Q3
The_highest_rating <- friends_info %>% filter(imdb_rating == max(imdb_rating)) %>%
select(title)
The_highest_rating
friends_info %>% filter(imdb_rating == max(imdb_rating))
friends_emotions %>% filter(season == 1) %>%
table(emotion)
friends_emotions %>% filter(season == 1) %>%
table()
#Q4
freq_emotion <-
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table()
#Q4
freq_emotion <-
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table()
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table()
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table() %>% sort()
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table() %>% sort(decreasing = TRUE)
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table() %>% sort(decreasing = TRUE)[1]
friends_emotions %>% filter(season == 1) %>% select(emotion) %>%
table() %>% sort(decreasing = TRUE)
friends_emotions %>% filter(season == 1) %>% group_by(emotion) %>%
summarise(count = 1:n())
friends_emotions %>% filter(season == 1) %>% group_by(emotion) %>%
summarise(count = n())
friends_emotions %>% filter(season == 1) %>%
group_by(emotion) %>%
summarise(count = n()) %>%
filter(count == max(count)) %>%
select(emotion)
#Q4
freq_emotion <- friends_emotions %>% filter(season == 1) %>%
group_by(emotion) %>%
summarise(count = n()) %>%
filter(count == max(count)) %>%
select(emotion)
print(freq_emotion)
#Q5
friends %>% group_by(speaker) %>%
filter(text == str_detect("ow you doin"))
#Q5
friends %>% filter(text == str_detect("ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot(aes(speaker,count, fill = speaker)) %>%
geom_bar()
#Q5
friends %>% filter(text == str_detect("ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot(aes(speaker,count, fill = speaker)) +
geom_bar()
?str_detect
#Q5
friends %>% filter(text == str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot(aes(speaker,count, fill = speaker)) +
geom_bar()
#Q5
friends %>% filter(text == str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot(aes(speaker,count, fill = speaker)) +
geom_col()
friends %>% filter(text == str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n())
friends %>% filter(text == str_detect(text,"ow you doi"))
friends %>% filter(str_detect(text,"ow you doi"))
friends %>% filter(str_detect(text,"ow you doin"))
#Q5
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot(aes(speaker,count, fill = speaker)) +
geom_col()
#Q4
freq_emotion <- friends_emotions %>% filter(season == 1) %>%
group_by(emotion) %>%
summarise(count = n()) %>%
filter(count == max(count)) %>%
select(emotion)
freq_emotion
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
sort(decreasing = TRUE)
#Q5
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
sort(count,decreasing = TRUE)
?sort
#Q5
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
order(count,decreasing = TRUE) %>%
ggplot(aes(speaker,count, fill = speaker)) +
geom_col()
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
order(count,decreasing = TRUE)
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n())
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
order(decreasing = TRUE)
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
arrange(desc(count))
#Q5
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
ggplot(aes(speaker,count, fill = speaker)) +
geom_col()
#Q5
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
ggplot(aes(x = reorder(speaker, count),count, fill = speaker)) +
geom_col()
#Q5
friends %>% filter(str_detect(text,"ow you doin")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot(aes(x = reorder(speaker, count),count, fill = speaker)) +
geom_col()
#Q6
#A
friends_info %>% group_by(season) %>%
summarise(avg_imdb_rating = mean(imdb_rating)) %>%
filter(avg_imdb_rating == max(avg_imdb_rating)) %>%
select(season)
#Q6
#A
avg_imdb_rating_per_season <- friends_info %>% group_by(season) %>%
summarise(avg_imdb_rating = mean(imdb_rating))
#Q6
#A
avg_imdb_rating_per_season <- friends_info %>% group_by(season) %>%
summarise(avg_imdb_rating = mean(imdb_rating))
avg_imdb_rating_per_season %>%
filter(avg_imdb_rating == max(avg_imdb_rating)) %>%
select(season)
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = season)) %>%
geom_bar()
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = season)) +
geom_bar()
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = season)) +
geom_col()
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,factor(avg_imdb_rating), fill = season)) +
geom_col()
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = factor(season))) +
geom_col()
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = factor(season))) +
geom_col() +
scale_y_continuous(limits = c(0, 10))
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = factor(season))) +
geom_col() +
scale_y_continuous(limits = c(5, 10))
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = factor(season))) +
geom_col() +
scale_y_continuous(limits = c(5, 10))
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,avg_imdb_rating, fill = factor(season))) +
geom_col() +
scale_y_continuous(limits = c(0, 10))
#B
avg_imdb_rating_per_season %>% ggplot(aes(season,imdb_rating, fill = factor(season))) +
geom_boxplot() +
scale_y_continuous(limits = c(0, 10))
#B
friends_info %>% ggplot(aes(imdb_rating, fill = factor(season))) +
geom_boxplot() +
scale_y_continuous(limits = c(0, 10))
#B
friends_info %>% ggplot(aes(season,imdb_rating, fill = factor(season))) +
geom_boxplot() +
scale_y_continuous(limits = c(0, 10))
#B
friends_info %>% ggplot(aes(season,imdb_rating, fill = factor(season))) +
geom_boxplot()
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean(imdb_rating),geom = "point")
friends_info
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean(imdb_rating),geom = "point")
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean(),geom = "point")
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point")
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point",fill = factor(season))
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point",fill = factor(season))
#B
friends_info %>% group_by(season) %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point",color = factor(season))
?stat_summary
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", color = factor(season))
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", color = factor(season))
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point")
n)
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", color = factor(season))
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season)))
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = mean_se, geom = "ribbon", alpha = 0.3, aes(color = factor(season)))
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = mean_se, geom = "errorbar", alpha = 0.3, aes(color = factor(season)))
#B
friends_info %>%
ggplot(aes(season,imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = mean_se, geom = "errorbar", aes(color = factor(season)))
#B
friends_info %>%
ggplot(aes(factor(season),imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = mean_se, geom = "errorbar", aes(color = factor(season)))
#B + c
friends_info %>%
ggplot(aes(factor(season),imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = median_hilow, geom = "errorbar", aes(color = factor(season)))
#B + c
friends_info %>%
ggplot(aes(factor(season),imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = median_hilow, geom = "errorbar", aes(color = factor(season))) +
continuous_y_scale(c(5,10))
#B + c
friends_info %>%
ggplot(aes(factor(season),imdb_rating, fill = factor(season))) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = median_hilow, geom = "errorbar", aes(color = factor(season))) +
scale_y_continuous(c(5,10))
?aes
#B + c
friends_info %>%
ggplot(aes(factor(season),imdb_rating, fill = factor(season),)) +
stat_summary(fun = mean,geom = "point", aes(color = factor(season))) +
stat_summary(fun.data = median_hilow, geom = "errorbar", aes(color = factor(season))) +
scale_y_continuous(limits = c(5,10))
#Q7
friends_info %>%
ggplot(aes(factor(season),us_views_millions,fill = factor(season))) +
stat_summary(fun = median,geom = "bar",aes(color = factor(season)))
#Q7
friends_info %>%
ggplot(aes(factor(season),us_views_millions,fill = factor(season))) +
stat_summary(fun = median,geom = "point",aes(color = factor(season)))
#4
Popular_Emotion <- friends_emotions %>% filter(season==1)
Popular_Emotion
which.max(table(Popular_Emotion$emotion))
table(Popular_Emotion$emotion)
which.max(table(Popular_Emotion$emotion))
#5
how_you_doin <- friends %>% filter(str_detect(text, "[Hh][Oo][Ww] [Yy][Oo][Uu] [Dd][Oo][Ii][Nn]"))
?str_detect
friends %>%
filter(str_detect(text, "[Hh][Oo][Ww] [Yy][Oo][Uu] [Dd][Oo][Ii][Nn]")) %>%
group_by(speaker) %>%
summarise(count = n()) %>%
ggplot() +
aes(x = reorder(speaker, -count), y = count) +
theme(axis.text.x = element_text(angle=45,hjust=1)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
geom_col(fill = "steel blue") +
labs(title = "Characters who said 'how you doin'",
subtitle = "Total for all seasons  \n",
x = "Character",
y = "Count")
#6
# Let's say we choose the sample mean as our estimator
# calculating imdb rating per season:
#A.
Full_Friends %>%
group_by(season) %>%
summarise(m_rating=mean(imdb_rating)) %>%
ungroup() %>%
filter(m_rating == max(m_rating))
#2
Full_Friends <- full_join(friends, friends_emotions, by = c("season", "episode", "scene", "utterance"))
Full_Friends <- full_join(Full_Friends, friends_info, by = c("season", "episode"))
#6
# Let's say we choose the sample mean as our estimator
# calculating imdb rating per season:
#A.
Full_Friends %>%
group_by(season) %>%
summarise(m_rating=mean(imdb_rating)) %>%
ungroup() %>%
filter(m_rating == max(m_rating))
#B.
Full_Friends %>%
ggplot(aes(x=factor(season),y=imdb_rating,color=factor(season)))+
stat_summary(fun=mean,show.legend = F)+
labs(x='Season')
#C.
Full_Friends %>%
ggplot(aes(x=factor(season),y=imdb_rating,color=factor(season)))+
stat_summary(fun.min = function(x) mean(x)-sd(x),
fun.max = function(x) mean(x)+sd(x),
geom='errorbar',color='darkgrey',show.legend = F)+
stat_summary(fun=mean,show.legend = F)+
labs(x='Season')
#7
Full_Friends %>%
ggplot(aes(x=factor(season),y=us_views_millions,color=factor(season)))+
stat_summary(fun.data=median_hilow,show.legend = F)+
labs(x='Season')
#8
Full_Friends %>%
filter(season%in%c(1:4)&!is.na(emotion)) %>%
group_by(season,episode) %>%
mutate(prop_joy=table(emotion)['Joyful']/sum(table(emotion))) %>%
ungroup() %>%
ggplot(aes(x=prop_joy,y=imdb_rating))+
geom_point()+
geom_smooth(method='lm',aes(color=factor(season)),show.legend = F)+
facet_wrap(~season,labeller = label_both,scales='free')
Full_Friends %>%
filter(season%in%c(1:4)&!is.na(emotion)) %>%
group_by(season,episode) %>%
mutate(prop_joy=table(emotion)['Joyful']/sum(table(emotion))) %>%
ungroup() %>%
group_by(season) %>%
summarise(r=cor(prop_joy,imdb_rating))
